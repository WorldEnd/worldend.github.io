name: Sync Volume Text

on:
  workflow_dispatch: # Enables manual run
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight

jobs:
  sync:
    runs-on: ubuntu-latest

    permissions:
      contents: write # Allow write permissions to commit and push changes

    steps:
      - name: Cache GitHub Pages Repo
        uses: actions/cache@v3
        with:
          path: worldend.github.io
          key: github-pages-repo-${{ runner.os }}-${{ hashFiles('worldend.github.io/*') }}

      - name: Cache Volume Text Repo
        uses: actions/cache@v3
        with:
          path: worldend-formatting
          key: volume-text-repo-${{ runner.os }}-${{ hashFiles('worldend-formatting/Volumes/*') }}

      - name: Checkout GitHub Pages Repo
        uses: actions/checkout@v4
        with:
          path: worldend.github.io
          fetch-depth: 1 # Only fetch the latest commit

      - name: Checkout Volume Text Repo
        uses: actions/checkout@v4
        with:
          repository: WorldEnd/worldend-formatting
          path: worldend-formatting
          fetch-depth: 1 # Only fetch the latest commit

      - name: Copy Files
        run: |
          mkdir -p worldend.github.io/_volume_text

          output_file="worldend.github.io/volume_text.md"
          echo "---" >"$output_file"
          echo "layout: article" >>"$output_file"
          echo "title: Volume Text" >>"$output_file"
          echo "key: page-volume-text" >>"$output_file"
          echo "---" >>"$output_file"
          echo "" >>"$output_file"

          for volume_dir in worldend-formatting/Volumes/*; do
              config_file="$volume_dir/config.yaml"

              volume=$(yq e '.volume_number' "$config_file")
              padded_volume=$(printf "%02d" "$volume")

              mkdir -p "worldend.github.io/assets/images/chapter/volume_${padded_volume}/"
              cp -r "$volume_dir/Images/Chapter/"* "worldend.github.io/assets/images/chapter/volume_${padded_volume}/"

              dest_volume_dir="worldend.github.io/_volume_text/volume_${padded_volume}"
              mkdir -p "$dest_volume_dir"

              chapter_count=$(yq e '.chapters | length' "$config_file")
              for ((chapter_index = 0; chapter_index < chapter_count; chapter_index++)); do
                  chapter_title=$(yq e ".chapters[$chapter_index].title" "$config_file" | sed 's/|/\\|/g')
                  chapter_parts=$(yq e ".chapters[$chapter_index].parts" "$config_file")

                  chapter_printed=false
                  part_counter=1

                  part_count=$(yq e ".chapters[$chapter_index].parts | length" "$config_file")
                  for ((part_index = 0; part_index < part_count; part_index++)); do
                      part_title=$(yq e ".chapters[$chapter_index].parts[$part_index].title" "$config_file" | sed 's/|/\\|/g')

                      if [[ $part_title == "null" ]]; then
                          file="$volume_dir/Text/$((chapter_index + 1)).md"
                          header="---\n"
                          header+="layout: article\n"
                          header+="title: Volume $volume - Chapter $((chapter_index + 1)) | $chapter_title\n"
                          if [[ $part_counter -eq 1 ]]; then
                              header+="article_header:\n"
                              header+="  type: cover\n"
                              header+="  image:\n"
                              header+="    src: /assets/images/chapter/volume_${padded_volume}/$((chapter_index + 1)).png\n"
                          fi
                          header+="---\n"
                      else
                          file="$volume_dir/Text/$((chapter_index + 1)).${part_counter}.md"
                          header="---\n"
                          header+="layout: article\n"
                          header+="title: Volume $volume - Chapter $((chapter_index + 1)), Part $part_counter | $part_title\n"
                          if [[ $part_counter -eq 1 ]]; then
                              header+="article_header:\n"
                              header+="  type: cover\n"
                              header+="  image:\n"
                              header+="    src: /assets/images/chapter/volume_${padded_volume}/$((chapter_index + 1)).png\n"
                          fi
                          header+="---\n"
                      fi

                      if [[ -f $file ]]; then
                          cat <(echo -e "$header") "$file" >"$dest_volume_dir/$(basename "$file")"
                      fi

                      file_path="{{ '/volume_text/' | relative_url }}volume_${padded_volume}/$(basename "$file" .md).html"

                      if [[ $chapter_printed == false ]]; then
                          if [[ $part_title != "null" ]]; then
                              echo "- Chapter $((chapter_index + 1)) \| $chapter_title" >>"$output_file"
                          else
                              echo "- [Chapter $((chapter_index + 1)) \| $chapter_title]($file_path)" >>"$output_file"
                          fi
                          chapter_printed=true
                      fi

                      if [[ $part_title != "null" ]]; then
                          echo "    - [Part $part_counter \| $part_title]($file_path)" >>"$output_file"
                      fi

                      part_counter=$((part_counter + 1))
                  done
              done
          done

      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: worldend.github.io
          commit_message: Sync Volume Text
          skip_fetch: true
          skip_checkout: true
